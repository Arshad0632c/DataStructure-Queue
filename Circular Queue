Circular Queue:

#include<iostream>
using namespace std;
void enqueue(int ele);
void dequeue();
void display();
int queue[100],size=5;
int front=-1,rear=-1;
int main()
{
	int choice,ele;
	cout<<"1.Enqueue\n2.Dequeue\n3.Display\n";
	while(1)
	{
		cout<<"Choice:";
		cin>>choice;
		switch(choice)
		{
			case 1: cout<<"Enter the element: ";
					cin>>ele;
					enqueue(ele);
					break;
			case 2: dequeue();
					break;
			case 3: display();
					break;
			default: cout<<"Program Terminated!!!";
					exit(0);
		}
	}
	return 0;
}
void enqueue(int ele)
{
	if((rear==size-1)&&(front==0))//||(front==rear+1))
		cout<<"Queue Overflow\n";
	else if((rear==-1)&&(front==-1))
		front=rear=0;
	else if((rear==size-1)&&(front!=0))
		rear=0;
	else
		rear=rear+1;
	queue[rear]=ele;
}
void dequeue()
{
	if(front==-1)
		cout<<"Queue Unerflow\n";
	else 
	{
		cout<<"Dequeued Element = "<<queue[front]<<endl;
		if(front==rear)
			front=rear=-1;
		else if(front==size-1)
			front=0;
		else
			front++;
	}
}
void display()
{
	int i;
	if((rear==-1)||(front==-1))
		cout<<"Queue Empty\n";
	else if(rear>=front)
	{
		cout<<"Elements: ";
		for(i=front;i<=rear;i++)
			cout<<queue[i]<<" ";
		cout<<endl;
	}
	else
	{
		cout<<"Elements: ";
		for(i=front;i<size;i++)
			cout<<queue[i]<<"  ";
		for(i=0;i<=rear;i++)
			cout<<queue[i]<<" ";
		cout<<endl;			
	}
}
